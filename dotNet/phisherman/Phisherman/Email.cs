using System;
using System.Collections.ObjectModel;
using Microsoft.Exchange.WebServices.Data;

namespace Phisherman
{
	// Token: 0x02000003 RID: 3
	internal class Email
	{
		// Token: 0x06000003 RID: 3 RVA: 0x000020AC File Offset: 0x000002AC
		public static Collection<ItemId> GetNewEmailItemIds(ExchangeService exchangeService, WellKnownFolderName folderName)
		{
			Collection<ItemId> collection = new Collection<ItemId>();
			try
			{
				foreach (Item item in exchangeService.FindItems(new FolderId(folderName), new ItemView(10)))
				{
					EmailMessage emailMessage = (EmailMessage)item;
					collection.Add(emailMessage.Id);
				}
			}
			catch (Exception ex)
			{
				Debug.Log("GetNewEmailItemIds", ex.Message);
			}
			return collection;
		}

		// Token: 0x06000004 RID: 4 RVA: 0x00002138 File Offset: 0x00000338
		public static Collection<EmailMessage> GetNewEmailBatch(ExchangeService exchangeService, Collection<ItemId> itemIds)
		{
			Collection<EmailMessage> collection = new Collection<EmailMessage>();
			try
			{
				ServiceResponseCollection<GetItemResponse> serviceResponseCollection = exchangeService.BindToItems(itemIds, new PropertySet(0, new PropertyDefinitionBase[]
				{
					EmailMessageSchema.Sender,
					ItemSchema.Subject,
					ItemSchema.Body,
					ItemSchema.HasAttachments,
					ItemSchema.Attachments
				})
				{
					RequestedBodyType = new BodyType?(1)
				});
				if (serviceResponseCollection.OverallResult != null)
				{
					Debug.Log("GetNewEmailBatch", serviceResponseCollection.OverallResult.ToString());
				}
				foreach (GetItemResponse getItemResponse in serviceResponseCollection)
				{
					EmailMessage item = (EmailMessage)getItemResponse.Item;
					collection.Add(item);
				}
			}
			catch (Exception ex)
			{
				Debug.Log("GetNewEmailBatch", ex.Message);
			}
			return collection;
		}

		// Token: 0x06000005 RID: 5 RVA: 0x0000222C File Offset: 0x0000042C
		public static void DeleteEmailBatch(ExchangeService exchangeService, Collection<ItemId> itemIds)
		{
			try
			{
				exchangeService.DeleteItems(itemIds, 0, null, new AffectedTaskOccurrence?(0));
			}
			catch (Exception ex)
			{
				Debug.Log("DeleteEmailBatch", ex.Message);
			}
		}
	}
}
